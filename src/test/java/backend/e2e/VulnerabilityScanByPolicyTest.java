package backend.e2e;

import static com.google.common.truth.Truth.assertWithMessage;

import io.automationhacks.backend.core.object.Serialization;
import io.automationhacks.backend.core.utils.StringUtils;
import io.automationhacks.backend.domain.client.administration.repositories.local.CreateRepositoryClient;
import io.automationhacks.backend.domain.model.administration.repositories.CreateRepositoryRequest;

import org.testng.annotations.Test;

public class VulnerabilityScanByPolicyTest {
    @Test
    public void testVulnerabilityScanByPolicy() {
        CreateRepositoryClient createRepositoryClient = new CreateRepositoryClient();

        String repoKey =
                "docker-local-%s".formatted(StringUtils.getRandomNumberBetweenRange(1, 1000));
        var createRepositoryRequest =
                CreateRepositoryRequest.builder()
                        .projectKey("")
                        .rclass("local")
                        .xrayIndex(true)
                        .packageType("docker")
                        .key(repoKey)
                        .build();

        String body = Serialization.serialize(createRepositoryRequest);
        var response = createRepositoryClient.createRepository(repoKey, body);
        assertWithMessage(
                        "Repository not created successfully for key: %s with response: %s",
                        repoKey, response.getBody())
                .that(response.getStatusCode())
                .isEqualTo(200);
    }
}
